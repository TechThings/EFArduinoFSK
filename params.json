{"name":"FSK-Arduino-iOS","tagline":"FSK Library for iOS interface with Arduino Development","body":"FSK-Arduino-iOS \r\n========\r\n[![Build Status](http://img.shields.io/travis/ezefranca/FSK-Arduino-iOS.svg?style=flat)](https://travis-ci.org/ezefranca/FSK-Arduino-iOS)\r\n[![Badge w/ Version](https://cocoapod-badges.herokuapp.com/v/FSK-Arduino-iOS/badge.png)](http://cocoadocs.org/docsets/FSK-Arduino-iOS)\r\n[![Badge w/ Platform](https://cocoapod-badges.herokuapp.com/p/FSK-Arduino-iOS/badge.svg)](http://cocoadocs.org/docsets/FSK-Arduino-iOS)\r\n[![wercker status](https://app.wercker.com/status/7d5a33ceed1006aae64e3937f40d2bf1/s \"wercker status\")](https://app.wercker.com/project/bykey/7d5a33ceed1006aae64e3937f40d2bf1)\r\n\r\n\r\nDependencies for iOS Development, using [Sofmodem Arduino library](https://code.google.com/p/arms22/downloads/detail?name=SoftModem-005.zip&can=2&q=), with FSK communication.\r\n\r\n[![imagem](https://raw.githubusercontent.com/ezefranca/FSK-Arduino-iOS7/master/FSK-Demo/image.png)](http://ironbark.xtelco.com.au/subjects/DC/lectures/7/)\r\n\r\n=====\r\n\r\nHow to use\r\n====\r\n\r\nThis libraries have a propouse work with an Arduino using a Sofmodem Shield* to communicate with iOS using FSK. Currently, the source code of the SoftModem is not made as a framework. If you want to use SoftModem in your project, you have two ways:\r\n\r\n## Adding FSK-Arduino-iOS to your project\r\n\r\n### Cocoapods\r\n\r\n[CocoaPods](http://cocoapods.org) is the recommended way to add FSK-Arduino-iOS to your project.\r\n\r\n1. Add a pod entry for FSK-Arduino-iOS to your Podfile `pod 'FSK-Arduino-iOS', '~> 0.0.2'`\r\n2. Install the pod(s) by running `pod install`.\r\n\r\n### Source files\r\n\r\nAlternatively you can directly adding source files to your project.\r\n\r\n1. Download the [latest code version](https://github.com/ezefranca/FSK-Arduino-iOS/archive/master.zip) or add the repository as a git submodule to your git-tracked project. \r\n2. The Folder /FSK must be copied from the source code of your project. The following is the list of source code related to FSK. Please copy these to the project source code.\r\n\r\n```objectivec\r\n* AudioQueueObject.h\r\n* AudioQueueObject.m\r\n* AudioSignalAnalyzer.h\r\n* AudioSignalAnalyzer.m\r\n* AudioSignalGenerator.h\r\n* AudioSignalGenerator.m\r\n* CharReceiver.h\r\n* FSKModemConfig.h\r\n* FSKByteQueue.h\r\n* FSKRecognizer.h\r\n* FSKRecognizer.mm\r\n* FSKSerialGenerator.h\r\n* FSKSerialGenerator.m\r\n* lockfree.h\r\n* MultiDelegate.h\r\n* MultiDelegate.m\r\n* PatternRecognizer.h\r\n```\r\n\r\nSoftModem uses the following two framework for audio input and output. Please add them to your project.\r\n\r\n![Image](https://raw.githubusercontent.com/ezefranca/FSK-Arduino-iOS7/master/FSK-Demo/FSK-Demo/framework.png)\r\n\r\n```objectivec\r\n* AudioToolbox.framework\r\n* AVFoundation.framework\r\n```\r\n\r\n\r\nInitialization\r\n=====\r\n\r\nFirst, set the category of application with AVAudioSession class. To do voice recording and playback, AVAudioSessionCategoryPlayAndRecord need to be set.\r\n\r\n```objectivec\r\nAVAudioSession *session = [AVAudioSession sharedInstance];   \r\n[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(interruption:) name:\r\nAVAudioSessionInterruptionNotification object:nil];\r\n\r\n[session setCategory:AVAudioSessionCategoryPlayAndRecord error:nil];\r\n[session setCategory:AVAudioSessionCategoryPlayback error:nil];\r\n[session setActive:YES error:nil];\r\n```\r\n\r\ninterruption selector method\r\n\r\n```objectivec\r\n- (void) interruption:(NSNotification*)notification\r\n{\r\n    NSDictionary *interuptionDict = notification.userInfo;\r\n    NSUInteger interuptionType = (NSUInteger)[interuptionDict valueForKey:AVAudioSessionInterruptionTypeKey];\r\n    \r\n    if (interuptionType == AVAudioSessionInterruptionTypeBegan)\r\n        [self beginInterruption];\r\n#if __CC_PLATFORM_IOS >= 40000\r\n    else if (interuptionType == AVAudioSessionInterruptionTypeEnded)\r\n        [self endInterruptionWithFlags:(NSUInteger)[interuptionDict valueForKey:AVAudioSessionInterruptionOptionKey]];\r\n#else\r\n    else if (interuptionType == AVAudioSessionInterruptionTypeEnded)\r\n        [self endInterruption];\r\n#endif\r\n}\r\n```\r\n\r\nNext, for analysis of the voice, make instance of class AudioSignalAnalyzer, FSKRecognizer and AudioSignalAnalyzer parses the input waveform from the microphone to detect the falling and rising edge of the waveform. FSKRecognizer restores the data bits based on the results of the analysis of AudioSignalAnalyzer.\r\n\r\n```objectivec\r\n        recognizer = [[FSKRecognizer alloc] init];     \r\n        [recognizer addReceiver:self];\r\n        analyzer = [[AudioSignalAnalyzer alloc] init]; \r\n        [analyzer addRecognizer:recognizer];\r\n```\r\n\r\nThen create an instance of a class FSKSerialGenerator for sound output. FSKSerialGenerator converts the data bits to audio signal and output.\r\n\r\n```objectivec\r\n        generator = [[FSKSerialGenerator alloc] init]; \r\n        [generator play];\r\n````\r\nReceiving\r\n=====\r\n\r\nRegister the class that implements the CharReceiver protocol to the FSKRecognizer class, and AVAudioSessionDelegate.\r\n\r\n```objectivec\r\n@interface YourClass : NSObject <AVAudioSessionDelegate, CharReceiver>\r\n````\r\nRegister FSKRecognizer class at initialization.\r\n\r\n```objectivec\r\nYourClass *yourClassInstance;\r\n[recognizer addReceiver: yourClassInstance];\r\n```\r\nreceivedChar: method is calledã€€when one byte of data is received.\r\n\r\n```objectivec\r\n- (void) receivedChar: (char) input\r\n{\r\n     // Receive handling\r\n}\r\n```\r\nSending\r\n=====\r\n\r\nSending data is much easier than receiving data. FSKSerialGenerator class's writeByte: method to sends a single byte.\r\n\r\n```objectivec\r\n[generator writeByte: 0xff];\r\n```\r\n\r\nLinks and Credits\r\n=====\r\n[arms22](http://arms22.blog91.fc2.com/) - Creator of Softmodem hardware, libraries for Arduino and ARC version lib for iOS.\r\n\r\n[Arduino Libraries](https://code.google.com/p/arms22/downloads/detail?name=SoftModem-005.zip&can=2&q=)\r\n\r\n[iOS 4/5 ARC version](https://github.com/9labco/IR-Remote)\r\n\r\n[FSK Wikipedia](http://en.wikipedia.org/wiki/Frequency-shift_keying)\r\n\r\n[FSK Explanation](http://ironbark.xtelco.com.au/subjects/DC/lectures/7/)\r\n\r\nLicense\r\n=====\r\nThis code is distributed under the terms and conditions of the [MIT license](LICENSE). \r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}